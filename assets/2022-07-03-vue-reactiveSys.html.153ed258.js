import{_ as s,o as a,c as t,b as p}from"./app.9a56070a.js";var n="/assets/initState.2b4c876c.png";const e={},o=p('<p>\u5728<a href="https://kkanll.wang/posts/2022-06-07-vue-reactive.html" target="_blank" rel="noopener noreferrer">Vue2\u6E90\u7801\u7CFB\u5217-\u8D77\u624B\u5F0F</a>\u4E2D\uFF0C\u6211\u4EEC\u5206\u6790\u4E86\u5165\u53E3\u6587\u4EF6\uFF0CVue\u521D\u59CB\u5316\u4E4B\u524D\u548CVue\u521D\u59CB\u5316\u7684\u6267\u884C\u8FC7\u7A0B\uFF0C\u5728Vue\u5B9E\u4F8B\u521D\u59CB\u5316<code>_init</code>\u51FD\u6570\u4E2D\uFF0C\u8FDB\u884C\u4E86\u5F88\u591A\u521D\u59CB\u5316\u64CD\u4F5C\uFF0C\u5176\u4E2D<code>initState</code>\u51FD\u6570\u5219\u5BF9\u54CD\u5E94\u5F0F\u6570\u636Eprops,methods,data,computed,watcher\u8FDB\u884C\u4E86\u521D\u59CB\u5316\u3002\u8FD9\u7BC7\u6587\u7AE0\u5C31\u4ECE<code>initState</code>\u51FD\u6570\u4E2D\u5BF9data\u7684\u54CD\u5E94\u5F0F\u5904\u7406\u4E3A\u5207\u5165\u70B9\uFF0C\u6765\u5B66\u4E60\u4E86\u89E3Vue\u7684\u54CD\u5E94\u5F0F\u7CFB\u7EDF\u7684\u5927\u81F4\u6784\u5EFA\u8FC7\u7A0B\u3002</p><h2 id="\u54CD\u5E94\u5F0F\u5165\u53E3" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5F0F\u5165\u53E3" aria-hidden="true">#</a> \u54CD\u5E94\u5F0F\u5165\u53E3</h2><h3 id="initstate" tabindex="-1"><a class="header-anchor" href="#initstate" aria-hidden="true">#</a> initState</h3><p>\u6211\u4EEC\u5148\u6765\u770B\u4E0B<code>initState</code>\u51FD\u6570\u7684\u6267\u884C\u8FC7\u7A0B\uFF0C\u8FC7\u7A0B\u5E76\u4E0D\u590D\u6742\uFF0C\u903B\u8F91\u4E5F\u5F88\u6E05\u6670\uFF1A <img src="'+n+`" alt="initState"> \u603B\u7ED3\u4E00\u4E0B<code>initState</code>\u505A\u7684\u51E0\u4EF6\u4E8B\uFF1A</p><ol><li>props\u54CD\u5E94\u5F0F\u5904\u7406</li><li>methods\u54CD\u5E94\u5F0F\u5904\u7406</li><li>data\u54CD\u5E94\u5F0F\u5904\u7406</li><li>computed\u54CD\u5E94\u5F0F\u5904\u7406</li><li>watch\u54CD\u5E94\u5F0F\u5904\u7406</li></ol><details class="custom-container details"><summary>\u67E5\u770BinitState\u6E90\u7801.</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token operator">:</span> Component<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token function">initProps</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span>
  
  <span class="token comment">// Composition API</span>
  <span class="token function">initSetup</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
  
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span> <span class="token function">initMethods</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ob <span class="token operator">=</span> <span class="token function">observe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ob <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">.</span>vmCount<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>watch <span class="token operator">&amp;&amp;</span> opts<span class="token punctuation">.</span>watch <span class="token operator">!==</span> nativeWatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initWatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>watch<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="initdata" tabindex="-1"><a class="header-anchor" href="#initdata" aria-hidden="true">#</a> initData</h3><p><code>initData</code>\u7684\u903B\u8F91\u4E5F\u4E0D\u590D\u6742\uFF0C\u4E3B\u8981\u662F\u83B7\u53D6data\u51FD\u6570\u8FD4\u56DE\u7684\u503C\uFF0Cdata\u5C5E\u6027\u6821\u9A8C\uFF0C\u54CD\u5E94\u5F0F\u5904\u7406\uFF1A <img src="`+n+`" alt="initState"></p><details class="custom-container details"><summary>\u67E5\u770BinitData\u6E90\u7801.</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token operator">:</span> Component<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
  <span class="token keyword">let</span> data<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data
  <span class="token comment">// \u521D\u59CB\u5316 _data\uFF0C\u7EC4\u4EF6\u4E2D data \u662F\u51FD\u6570\uFF0C\u8C03\u7528\u51FD\u6570\u8FD4\u56DE\u7ED3\u679C \u5426\u5219\u76F4\u63A5\u8FD4\u56DE data</span>
  data <span class="token operator">=</span> vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">getData</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> vm<span class="token punctuation">)</span> <span class="token operator">:</span> data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    __DEV__ <span class="token operator">&amp;&amp;</span>
    <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token string">&#39;data functions should return an object:\\n&#39;</span> <span class="token operator">+</span>
      <span class="token string">&#39;https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function&#39;</span><span class="token punctuation">,</span>
      vm
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// proxy data on instance</span>
  <span class="token comment">// \u83B7\u53D6 data \u4E2D\u7684\u6240\u6709\u5C5E\u6027</span>
  <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token comment">// \u83B7\u53D6 props / methods</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props
  <span class="token keyword">const</span> methods <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>methods
  <span class="token keyword">let</span> i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length
  <span class="token comment">// \u5224\u65AD data \u4E0A\u7684\u6210\u5458\u662F\u5426\u548C  props/methods \u91CD\u540D</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u547D\u540D\u4E0D\u80FD\u548C\u65B9\u6CD5\u91CD\u590D</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Method &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; has already been defined as a data property.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u547D\u540D\u4E0D\u80FD\u548Cprops\u91CD\u590D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      __DEV__ <span class="token operator">&amp;&amp;</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The data property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already declared as a prop. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use prop default value instead.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isReserved</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// proxy \u4F1A\u5BF9 data \u505A\u4E00\u5C42\u4EE3\u7406\uFF0C\u76F4\u63A5\u901A\u8FC7 vm.XXX \u53EF\u4EE5\u4EE3\u7406\u8BBF\u95EE\u5230 vm._data \u4E0A\u6302\u8F7D\u7684\u5BF9 \u8C61\u5C5E\u6027\u3002</span>
      <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_data</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// observe data</span>
  <span class="token comment">// \u54CD\u5E94\u5F0F\u5904\u7406</span>
  <span class="token keyword">const</span> ob <span class="token operator">=</span> <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  ob <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">.</span>vmCount<span class="token operator">++</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">,</span> vm<span class="token operator">:</span> Component<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token comment">// #7573 disable dep collection when invoking data getters</span>
  <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">data</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">data()</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>\u5176\u4E2D\u83B7\u53D6data\u51FD\u6570\u7684\u503C\u4E5F\u5C31\u662F<code>getData</code>\u8FD9\u4E2A\u51FD\u6570\u7684\u5B9E\u73B0\uFF0C\u503C\u5F97\u7EC6\u54C1\u4E00\u4E0B\u3002<br><code>getData</code>\u51FD\u6570\u4E2D\uFF0C\u6838\u5FC3\u5C31\u4E00\u53E5\u8BDD\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">,</span> vm<span class="token operator">:</span> Component<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
<span class="token comment">//...</span>
  <span class="token keyword">return</span> <span class="token function">data</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
<span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getData</code>\u53EA\u4F1A\u5728data\u662F\u51FD\u6570\u65F6\u89E6\u53D1\uFF0C\u5176\u4E2D\u5305\u542B\u4E86\u51E0\u70B9\u4FE1\u606F\uFF1A</p><ol><li>\u6839\u5B9E\u4F8B\u4F20\u5165\u7684data\u56E0\u4E3A\u662F\u5BF9\u8C61\uFF0C\u4E0D\u4F1A\u8C03\u7528getData()</li><li>\u8FD9\u91CC\u5176\u5B9E\u4E5F\u5370\u8BC1\u4E86&quot;\u7EC4\u4EF6\u4E2D\u7684data\u662F\u4E00\u4E2A\u51FD\u6570&quot;\uFF0C\u7EC4\u4EF6\u4E2Ddata\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u91CC<code>data.call</code>\u8C03\u7528\u540E\uFF0C\u5C31\u80FD\u83B7\u53D6\u5230\u6211\u4EEC\u5B9A\u4E49\u7684data\u5BF9\u8C61\u4E86\u3002</li></ol><h2 id="observe" tabindex="-1"><a class="header-anchor" href="#observe" aria-hidden="true">#</a> observe</h2><ol><li>\u5224\u65AD\u662F\u5426\u975E\u5BF9\u8C61/Ref/VNode\uFF0C\u662F\u5219\u76F4\u63A5return</li><li>\u5224\u65AD\u662F\u5426\u6709&#39;<strong>ob</strong>&#39;\u5C5E\u6027\uFF08\u6709\u7684\u8BDD\u8BF4\u660E\u5DF2\u7ECF\u88AB\u54CD\u5E94\u5F0F\u5904\u7406\u8FC7\u4E86\uFF09\uFF0C\u6709\u7684\u8BDDob\u7B49\u4E8E__ob__\u7684\u503C \u5982\u679C\u6CA1\u6709\u7684\u8BDD\u8FD8\u8981\u5224\u65AD\u51E0\u4E2A\u6761\u4EF6\uFF1A <ul><li>shouldObserve,\u8FD9\u4E2A\u5C5E\u6027\u662F\u901A\u8FC7toggleObserving\u51FD\u6570\u6539\u53D8\u7684\uFF0C\u6709\u4E9B\u60C5\u51B5\u4E0B\u6211\u4EEC\u5E76\u4E0D\u60F3\u54CD\u5E94\u5F0F\u5904\u7406\u65F6\u8C03\u7528\u6B64\u51FD\u6570\u6539\u53D8shouldObserve</li><li>isServerRendering \u662F\u5426\u662Fssr</li><li>\u662F\u5426\u662F\u6570\u7EC4\u6216\u8005\u7EAF\u5BF9\u8C61</li><li>Object.isExtensible\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u53EF\u6269\u5C55\uFF0C\u4E5F\u5C31\u662F\u662F\u5426\u80FD\u6DFB\u52A0__ob__\u5C5E\u6027</li><li>vue\u5B9E\u4F8B\u4E0D\u9700\u8981\u54CD\u5E94\u5F0F\u5904\u7406</li></ul></li><li>\u5B9E\u4F8B\u5316Observer</li></ol><details class="custom-container details"><summary>\u67E5\u770Bobserve\u6E90\u7801</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> shallow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> Observer <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65AD value \u662F\u5426\u662F\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isRef</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> value <span class="token keyword">instanceof</span> <span class="token class-name">VNode</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">let</span> ob<span class="token operator">:</span> Observer <span class="token operator">|</span> <span class="token keyword">void</span>
  <span class="token comment">// \u5982\u679C value \u6709 __ob__(observer\u5BF9\u8C61) \u5C5E\u6027</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>__ob__ <span class="token keyword">instanceof</span> <span class="token class-name">Observer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob <span class="token operator">=</span> value<span class="token punctuation">.</span>__ob__
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
    shouldObserve <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span>value<span class="token punctuation">.</span>__v_skip <span class="token comment">//\u5982\u679C\u662Fvue\u5B9E\u4F8B\u4E0D\u9700\u8981\u54CD\u5E94\u5F0F\u5904\u7406</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A Observer \u5BF9\u8C61</span>
    ob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> shallow<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ob
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="observer" tabindex="-1"><a class="header-anchor" href="#observer" aria-hidden="true">#</a> Observer</h2><p>\u5B9E\u4F8B\u5316\u8FC7\u7A0B</p><ol><li>\u5B9E\u4F8B\u5316Dep\u7C7B</li><li>def\u51FD\u6570\u4E3A\u4F20\u8FDB\u6765\u7684\u5BF9\u8C61(constructor\u7684\u53C2\u6570value\u5FC5\u7136\u662F\u5BF9\u8C61\uFF0C\u56E0\u4E3A\u5728observe\u4E2D\u5DF2\u7ECF\u8FC7\u6EE4\u4E86)\uFF0C\u8BBE\u7F6E__ob__\u5C5E\u6027\u5E76\u8BBE\u7F6E\u5B83\u7684\u503C\u4E3AObserver\u5B9E\u4F8B</li><li>value\u5982\u679C\u4E3A\u6570\u7EC4\uFF0C\u8C03\u7528observeArray\u51FD\u6570\uFF08\u4E4B\u540E\u518D\u8BB2\u6570\u7EC4\uFF09</li><li>\u5176\u4ED6\u5BF9\u8C61\uFF0C\u8C03\u7528walk\u51FD\u6570\u904D\u5386\u6BCF\u4E2A\u5C5E\u6027</li></ol><details class="custom-container details"><summary>\u67E5\u770BObserver\u6E90\u7801</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7BA1\u7406\u4F9D\u8D56\u7684Dep\u7C7B</span>
  dep<span class="token operator">:</span> Dep
  <span class="token comment">// \u5B9E\u4F8B\u8BA1\u6570\u5668</span>
  vmCount<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">// number of vms that have this object as root $data</span>
  
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token keyword">public</span> shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// this.value = value</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmCount <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">// \u5C06\u5B9E\u4F8B\u6302\u8F7D\u5230\u89C2\u5BDF\u5BF9\u8C61\u7684 __ob__ \u5C5E\u6027</span>
    <span class="token function">def</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6570\u7EC4\u7684\u54CD\u5E94\u5F0F\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasProto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">protoAugment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">copyAugment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">,</span> arrayKeys<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shallow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u904D\u5386\u5BF9\u8C61\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5C5E\u6027\uFF0C\u8F6C\u6362\u6210 setter/getter</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> shallow<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token function">walk</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> object<span class="token punctuation">,</span> shallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u89C2\u5BDF\u5BF9\u8C61\u7684\u6BCF\u4E00\u4E2A\u5C5E\u6027</span>
    <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
    <span class="token comment">// \u904D\u5386\u6BCF\u4E00\u4E2A\u5C5E\u6027\uFF0C\u8BBE\u7F6E\u4E3A\u54CD\u5E94\u5F0F\u6570\u636E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token function">defineReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token constant">NO_INIITIAL_VALUE</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> shallow<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token function">observeArray</span><span class="token punctuation">(</span>items<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">observe</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="definereactive" tabindex="-1"><a class="header-anchor" href="#definereactive" aria-hidden="true">#</a> defineReactive</h3><h3 id="\u6570\u7EC4\u7684\u54CD\u5E94\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7684\u54CD\u5E94\u5F0F" aria-hidden="true">#</a> \u6570\u7EC4\u7684\u54CD\u5E94\u5F0F</h3><h2 id="dep" tabindex="-1"><a class="header-anchor" href="#dep" aria-hidden="true">#</a> Dep</h2>`,23),c=[o];function i(l,u){return a(),t("div",null,c)}var k=s(e,[["render",i],["__file","2022-07-03-vue-reactiveSys.html.vue"]]);export{k as default};
