import{_ as o,o as a,c as e,a as n,e as s,b as p}from"./app.9a56070a.js";var c="/assets/uncaughtTypeError.76f325fa.png",l="/assets/then1andthen2.41820762.png",t="/assets/promiseFinally.9882fcc3.png";const i={},u=n("p",null,[s("\u65E5\u5E38\u5F00\u53D1\u4E2D,\u6211\u4EEC\u7ECF\u5E38\u4F1A\u4F7F\u7528\u5230"),n("code",null,"Promise"),s(",\u4ECA\u5929\u6211\u4EEC\u5C31\u6765\u63ED\u5F00\u5B83\u7684\u795E\u79D8\u9762\u7EB1,\u770B\u770B\u5B83\u7684\u5185\u90E8\u662F\u5982\u4F55\u5B9E\u73B0\u7684")],-1),r={class:"custom-container tip"},k={viewBox:"0 0 25 25",xmlns:"http://www.w3.org/2000/svg","xml:space":"preserve",style:{"fill-rule":"evenodd","clip-rule":"evenodd","stroke-linejoin":"round","stroke-miterlimit":"2"}},d=n("path",{d:"M297.6 258.73H296c-59.47.87-110.69 51.45-111.83 110.43-.626 36.485 16.525 71.085 45.94 92.68 17.86 13.18 29.88 33.56 33.77 56.42h67.62c4-22.82 16.13-43.3 34.16-56.74 28.589-21.097 45.496-54.587 45.496-90.118 0-30.03-12.078-58.833-33.496-79.882a113.133 113.133 0 0 0-80.06-32.79ZM265.19 550.7v26.6c0 4.84 1.17 6.43 1.17 6.43l63.72-.59V550.7h-64.89Z",style:{fill:"#48b884","fill-rule":"nonzero"},transform:"matrix(.042 0 0 .042 0 -5.178)"},null,-1),v=n("path",{d:"M297.64 123.3C133.26 123.3 0 256.56 0 420.94s133.26 297.63 297.64 297.63 297.63-133.25 297.63-297.63S462 123.3 297.64 123.3ZM385 487.57c-14.11 10.48-22.51 28.09-22.51 47.14v48.43c-.016 17.792-14.648 32.428-32.44 32.45h-64.86c-15.6 0-32.44-12-32.44-38.29v-42.82c0-19-8.21-36.4-21.93-46.52-37.882-27.85-59.959-72.44-59.14-119.45 1.46-77.24 66-141.09 143.81-142.22 38.87.19 76.89 14.37 105 42.11a143.764 143.764 0 0 1 43.14 103c-.159 45.761-21.911 88.86-58.63 116.17Z",style:{fill:"#48b884","fill-rule":"nonzero"},transform:"matrix(.042 0 0 .042 0 -5.178)"},null,-1),m=[d,v],b=n("p",{class:"custom-container-title"},"TIP",-1),h=n("p",null,[s("\u91CD\u590D\u7684\u4EE3\u7801\u6211\u5C31\u4E0D\u8D34\u4E86,\u7EDF\u4E00\u7528/"),n("em",null,"---\u7701\u7565---"),s("/\u8868\u793A,\u53EA\u9700\u8981\u5173\u6CE8\u6539\u53D8\u7684\u4EE3\u7801\u5373\u53EF\u3002")],-1),y=p(`<h2 id="\u4E00\u4E2A\u6700\u57FA\u672C\u7684promise" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E2A\u6700\u57FA\u672C\u7684promise" aria-hidden="true">#</a> \u4E00\u4E2A\u6700\u57FA\u672C\u7684Promise</h2><p>\u5B9E\u73B0\u67D0\u67D0\u51FD\u6570,\u6211\u4EEC\u4E00\u822C\u53EF\u4EE5\u4ECE\u4ED6\u662F\u600E\u4E48\u7528\u7684\u5F00\u59CB\u5165\u624B \u4E00\u822C\u6211\u4EEC\u4F1A\u8FD9\u4E48\u4F7F\u7528<code>Promise</code>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//index.js</span>
<span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u8FD9\u4E00\u884C\u4EE3\u7801,\u6211\u4EEC\u5C31\u80FD\u53D1\u73B0:</p><ol><li><code>Promise</code>\u662F\u4E00\u4E2A\u7C7B</li><li>\u521D\u59CB\u5316<code>Promise</code>\u8FD9\u4E2A\u7C7B\u65F6\u9700\u8981\u4F20\u9012\u4E00\u4E2A\u6267\u884C\u51FD\u6570,\u8FD9\u4E2A\u6267\u884C\u51FD\u6570\u6709\u4E24\u4E2A\u53C2\u6570,\u5F53\u7136,\u6839\u636E\u6211\u4EEC\u7684\u5E38\u8BC6,\u8FD9\u4E24\u4E2A\u53C2\u6570\u4E5F\u90FD\u662F\u51FD\u6570 \u597D,\u6211\u4EEC\u5C31\u5148\u4ECE\u8FD9\u4E00\u6B65\u5F00\u59CB,\u5199\u4E00\u4E2A\u6211\u4EEC\u81EA\u5DF1\u7684<code>Promise</code>,\u4EE3\u7801\u5982\u4E0B:</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765,\u8BA9\u6211\u4EEC\u518D\u56DE\u5FC6\u4E00\u4E0B,<code>Promise</code>\u7684\u8FD9\u4E2A\u6267\u884C\u5668\u5185\u6211\u4EEC\u53C8\u4F1A\u5199\u4EC0\u4E48\u4EE3\u7801\u5462?</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u6210\u529F\u65F6</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F\u4E86&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">//\u5931\u8D25\u65F6</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4F7F\u7528<code>Promise</code>\u7684\u4EE3\u7801,\u8BF4\u660E<code>Promise</code>\u4F7F\u7528\u65F6\u7684\u51E0\u4E2A\u7279\u70B9:</p><ol><li>\u6210\u529F\u8C03\u7528<code>resolve()</code>,\u5982\u679C\u6709\u9700\u8981\u53EF\u4EE5\u4F20\u9012\u4E00\u4E2A\u503C\u7ED9<code>resolve()</code></li><li>\u5931\u8D25\u8C03\u7528<code>reject()</code>,\u4E00\u822C\u8FD9\u65F6\u4F1A\u5C06<code>new Error()</code>\u5F53\u505A\u53C2\u6570\u4F20\u7ED9<code>reject()</code></li><li>\u540C\u65F6\u8FD8\u6709\u4E2A\u9690\u6027\u7684\u7279\u70B9,<code>Promise</code>\u7684\u72B6\u6001\u4E00\u65E6\u4ECE<code>pending</code>\u53D8\u4E3A<code>fulfilled</code>\u6216\u8005<code>rejected</code>,<code>Promise</code>\u7684\u72B6\u6001\u5C31\u4E0D\u80FD\u518D\u88AB\u6539\u53D8\u4E86,\u4E5F\u5C31\u662F\u8BF4,\u4E0A\u9762\u7684\u4EE3\u7801\u867D\u7136\u540C\u65F6\u8C03\u7528\u4E86<code>resolve()</code>\u548C<code>reject()</code>,\u4F46\u53EA\u6709<code>resolve()</code>\u4F1A\u88AB\u8C03\u7528.\u53CD\u8FC7\u6765,<code>reject()</code>\u5148\u8C03\u7528,\u90A3\u4E48<code>resolve()</code>\u4E5F\u4E0D\u4F1A\u88AB\u8C03\u7528.\u4E0D\u6E05\u695A\u7684\u5C0F\u4F19\u4F34\u53EF\u4EE5\u81EA\u5DF1\u53BB\u8BD5\u8BD5\u54E6</li></ol><p>\u597D,\u6211\u4EEC\u7EE7\u7EED\u6309\u7167\u6211\u4EEC\u521A\u624D\u603B\u7ED3\u7684<code>Promise</code>\u7279\u70B9,\u7EE7\u7EED\u5199<code>myPromise</code>\u7684\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
<span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span>
<span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  status <span class="token operator">=</span> <span class="token constant">PENDING</span>
  value <span class="token operator">=</span> <span class="token keyword">undefined</span>
  reason <span class="token operator">=</span> <span class="token keyword">undefined</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token comment">//\u5982\u679Cfulfilled\u6216\u8005rejected\u5C31\u8FD4\u56DE</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">FULFILLED</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
  <span class="token punctuation">}</span>
  <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token comment">//\u540C\u4E0A</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">REJECTED</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ok,easy!\u90A3<code>Promise</code>\u6700\u91CD\u8981\u7684\u4E00\u4E2A\u7279\u70B9<code>then</code>\u7684\u94FE\u5F0F\u8C03\u7528,\u89E3\u51B3\u4E86\u4E4B\u524Djs\u4E00\u4E2A\u5F88\u5927\u7684\u75DB\u70B9:\u56DE\u8C03\u5730\u72F1\u3002<br> \u90A3\u4E48,<code>then()</code>\u53C8\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u5462?\u540C\u6837\u7684,\u6211\u4EEC\u5148\u770B\u770B\u6211\u4EEC\u5E73\u65F6\u7528\u7684<code>Promise</code>\u662F\u600E\u4E48\u4F7F\u7528<code>then()</code>\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
 promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
   <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>then()</code>\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570,\u4E00\u4E2A\u8868\u793A\u6210\u529F\u4E4B\u540E\u7684\u56DE\u8C03\u51FD\u6570,\u4E00\u4E2A\u8868\u793A\u5931\u8D25\u4E4B\u540E\u7684\u56DE\u8C03\u51FD\u6570\u3002<br> \u540C\u65F6\u8FD9\u4E24\u4E2A\u51FD\u6570\u90FD\u4F1A\u63A5\u6536<code>resolve()</code>/<code>reject()</code>\u4F20\u9012\u8FC7\u6765\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
<span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span>
<span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  status <span class="token operator">=</span> <span class="token constant">PENDING</span>
  value <span class="token operator">=</span> <span class="token keyword">undefined</span>
  reason <span class="token operator">=</span> <span class="token keyword">undefined</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ok!\u5230\u8FD9\u91CC,\u6211\u4EEC\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7B80\u6613\u7684<code>Promise</code>\u4E86\u3002</p><h2 id="\u5904\u7406\u5F02\u6B65\u903B\u8F91\u7684mypromise" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u5F02\u6B65\u903B\u8F91\u7684mypromise" aria-hidden="true">#</a> \u5904\u7406\u5F02\u6B65\u903B\u8F91\u7684<code>myPromise</code></h2><p>\u521A\u624D\u6211\u4EEC\u5B9E\u73B0\u7684<code>myPromise</code>\u5904\u7406\u540C\u6B65\u7684\u4EE3\u7801\u662F\u6CA1\u6709\u95EE\u9898\u7684,\u4F46\u5904\u7406\u5F02\u6B65\u903B\u8F91\u7684\u4EE3\u7801\u5C31\u4F1A\u51FA\u95EE\u9898\u4E86:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout go&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u6211\u4EEC\u521A\u624D\u6784\u9020\u7684<code>myPromise</code>\u51FD\u6570,<code>new myPromise</code>\u4E4B\u540E,<code>setTimeout</code>\u4E2D\u7684\u4EE3\u7801\u4E0D\u4F1A\u7ACB\u5373\u6267\u884C,\u800C\u662F\u7EE7\u7EED\u6267\u884C\u4E0B\u9762\u7684<code>promise.then()</code>\u3002<br> \u6240\u4EE5,<code>myPromise</code>\u8FD8\u9700\u8981\u5BF9\u5F02\u6B65\u903B\u8F91\u8FDB\u884C\u5904\u7406\u3002<br><code>setTimeout</code>\u89E6\u53D1\u5F02\u6B65\u903B\u8F91\u540E,<code>myPromise</code>\u7684\u72B6\u6001\u56E0\u4E3A\u5E76\u6CA1\u6709\u6267\u884C<code>resolve()</code>\u800C\u505C\u7559\u5728<code>pending</code>\u72B6\u6001,\u6240\u4EE5\u5728<code>then()</code>\u4E2D\u6211\u4EEC\u8981\u589E\u52A0\u5BF9<code>pending</code>\u72B6\u6001\u7684\u5904\u7406\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>fail</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5F02\u6B65\u903B\u8F91\u4E0D\u4F1A\u7ACB\u9A6C\u6539\u53D8promise\u7684\u72B6\u6001,\u5373\u65E2\u4E0D\u4F1A\u662Ffulfilled\u4E5F\u4E0D\u4F1A\u662Frejected</span>
      <span class="token comment">//\u6240\u4EE5\u5728pending\u8FD9\u91CC\u5BF9\u5F02\u6B65\u903B\u8F91\u8FDB\u884C\u4FDD\u5B58,\u7B49\u5F85promise\u72B6\u6001\u6539\u53D8\u518D\u6267\u884C</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>successCB <span class="token operator">=</span> success
      <span class="token keyword">this</span><span class="token punctuation">.</span>failCB <span class="token operator">=</span> fail
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837,<code>myPromise</code>\u5C31\u80FD\u5904\u7406\u5F02\u6B65\u7684\u51FD\u6570\u4E86\u3002</p><h2 id="then-\u7684\u591A\u6B21\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#then-\u7684\u591A\u6B21\u8C03\u7528" aria-hidden="true">#</a> then()\u7684\u591A\u6B21\u8C03\u7528</h2><p>\u4F46\u8FD9\u6837\u5199\u7684<code>then</code>\u51FD\u6570\u4F1A\u6709\u4E00\u4E2A\u95EE\u9898,\u6211\u4EEC\u5728\u4F7F\u7528Promise\u7684\u65F6\u5019,\u7ECF\u5E38\u4F1A\u591A\u6B21\u8C03\u7528<code>Promise.then()</code>\u65B9\u6CD5,\u8FD9\u65F6\u5019\u6211\u4EEC\u8BA9<code>this.successCB = success</code>\u5C31\u6709\u95EE\u9898\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;async logic&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5,\u6211\u4EEC\u5F97\u628A<code>successCB</code>\u548C<code>failCB</code>\u66F4\u6539\u4E3A\u6570\u7EC4, \u5982\u679C\u53D1\u73B0\u6267\u884C\u903B\u8F91\u662F\u5F02\u6B65\u7684,\u5C31\u5C06\u6267\u884C\u903B\u8F91push\u8FDB<code>successCB</code>/<code>failCB</code>\u4E2D,\u7B49<code>pending\u72B6\u6001</code>\u53D8\u4E3A<code>fulfilled</code>/<code>rejected</code>\u4E4B\u540E,\u5C06\u6267\u884C\u903B\u8F91\u4ECE\u6570\u7EC4<code>successCB</code>/<code>failCB</code>\u4E2D\u5F39\u51FA\u5E76\u6267\u884C\u3002<br> \u8BDD\u4E0D\u591A\u8BF4,\u8FD8\u662F\u4EE3\u7801\u6700\u80FD\u8BF4\u660E\u95EE\u9898:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token comment">// successCB = undefined</span>
  <span class="token comment">// failCB = undefined</span>
  successCB <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">//\u4E3A\u4E86\u5B9E\u73B0then\u7684\u591A\u6B21\u8C03\u7528\u6539\u4E3A\u6570\u7EC4</span>
  failCB <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u540C\u4E0A</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token comment">// this.successCB &amp;&amp; this.successCB(this.value)</span>
    <span class="token comment">//\u591A\u6B21\u8C03\u7528then</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>successCB<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successCB<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token comment">// this.failCB &amp;&amp; this.failCB(this.reason)</span>
    <span class="token comment">//\u591A\u6B21\u8C03\u7528then</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>failCB<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>failCB<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>fail</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>successCB<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>success<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>failCB<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fail<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="then-\u7684\u94FE\u5F0F\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#then-\u7684\u94FE\u5F0F\u8C03\u7528" aria-hidden="true">#</a> then()\u7684\u94FE\u5F0F\u8C03\u7528</h2><h3 id="\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a> \u5206\u6790</h3><h4 id="_1-promise\u5141\u8BB8\u6211\u4EEC\u4F7F\u7528then-\u5E76\u4E14\u652F\u6301\u94FE\u5F0F\u8C03\u7528-\u94FE\u5F0F\u8C03\u7528\u7684then-\u63A5\u6536\u4E0A\u4E00\u4E2Apromise\u51FD\u6570\u7684\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_1-promise\u5141\u8BB8\u6211\u4EEC\u4F7F\u7528then-\u5E76\u4E14\u652F\u6301\u94FE\u5F0F\u8C03\u7528-\u94FE\u5F0F\u8C03\u7528\u7684then-\u63A5\u6536\u4E0A\u4E00\u4E2Apromise\u51FD\u6570\u7684\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 1. <code>Promise</code>\u5141\u8BB8\u6211\u4EEC\u4F7F\u7528<code>then()</code>,\u5E76\u4E14\u652F\u6301\u94FE\u5F0F\u8C03\u7528,\u94FE\u5F0F\u8C03\u7528\u7684<code>then()</code>\u63A5\u6536\u4E0A\u4E00\u4E2A<code>Promise</code>\u51FD\u6570\u7684\u8FD4\u56DE\u503C</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>
    <span class="token comment">//res2 \u2192 &#39;100&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-then-\u7684\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C-\u65E2\u53EF\u4EE5\u662Fpromise-\u4E5F\u53EF\u4EE5\u662F\u5176\u4ED6\u666E\u901A\u503C-\u8981\u5224\u65AD\u5E76\u5206\u522B\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_2-then-\u7684\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C-\u65E2\u53EF\u4EE5\u662Fpromise-\u4E5F\u53EF\u4EE5\u662F\u5176\u4ED6\u666E\u901A\u503C-\u8981\u5224\u65AD\u5E76\u5206\u522B\u5904\u7406" aria-hidden="true">#</a> 2. <code>then()</code>\u7684\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C,\u65E2\u53EF\u4EE5\u662F<code>Promise</code>,\u4E5F\u53EF\u4EE5\u662F\u5176\u4ED6\u666E\u901A\u503C,\u8981\u5224\u65AD\u5E76\u5206\u522B\u5904\u7406</h4><h4 id="_3-\u5982\u679Cthen-\u7684\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662Fthen-\u8FD4\u56DE\u7684\u90A3\u4E2Apromise-\u5E94\u8BE5\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002" tabindex="-1"><a class="header-anchor" href="#_3-\u5982\u679Cthen-\u7684\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662Fthen-\u8FD4\u56DE\u7684\u90A3\u4E2Apromise-\u5E94\u8BE5\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002" aria-hidden="true">#</a> 3. \u5982\u679C<code>then()</code>\u7684\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F<code>then()</code>\u8FD4\u56DE\u7684\u90A3\u4E2A<code>Promise</code>,\u5E94\u8BE5\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002</h4><p><img src="`+c+`" alt="1"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> p1
  <span class="token comment">//Uncaught (in promise) TypeError: Chaining cycle detected for promise #&lt;Promise&gt;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h3><h4 id="_1-\u94FE\u5F0F\u8C03\u7528-return\u4E00\u4E2A\u65B0\u7684mypromise\u5373\u53EF" tabindex="-1"><a class="header-anchor" href="#_1-\u94FE\u5F0F\u8C03\u7528-return\u4E00\u4E2A\u65B0\u7684mypromise\u5373\u53EF" aria-hidden="true">#</a> 1. \u94FE\u5F0F\u8C03\u7528:<code>return</code>\u4E00\u4E2A\u65B0\u7684<code>myPromise</code>\u5373\u53EF</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>fail</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u94FE\u5F0F\u8C03\u7528\u8FD8\u9700\u8981\u63A5\u6536\u4E0A\u4E00\u4E2APromise\u51FD\u6570\u7684\u8FD4\u56DE\u503C <img src="`+l+`" alt="1"><br> \u5982\u56FE\u6240\u793A,\u6211\u4EEC\u9700\u8981\u5C06<code>then1</code>\u7684\u6267\u884C\u7ED3\u679C\u4F20\u9012\u7ED9<code>then2</code>,\u53EA\u9700\u8981\u8C03\u7528<code>then1</code>\u8FD4\u56DE\u7684Promise\u7684<code>resolve()</code>\u65B9\u6CD5,<code>then1</code>\u7684\u6267\u884C\u7ED3\u679C\u5C31\u4F1A\u4FDD\u5B58\u5728<code>class myPromise</code>\u7684<code>value</code>\u4E2D;<br><code>then2</code>\u5C31\u53EF\u4EE5\u901A\u8FC7<code>this.value</code>\u83B7\u53D6\u5230<code>then1</code>\u4F20\u9012\u8FC7\u6765\u7684\u6267\u884C\u7ED3\u679C\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">/* ---\u7701\u7565--- */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// success(this.value)</span>
        <span class="token keyword">let</span> xxx <span class="token operator">=</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>xxx<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-\u4E0A\u9762\u7684\u4EE3\u7801\u4E2Dxxx\u8FD9\u4E2A\u53D8\u91CF\u4EE3\u8868\u7684\u5C31\u662Fthen-\u56DE\u8C03\u51FD\u6570\u6240\u8FD4\u56DE\u7684\u503C-\u6240\u4EE5\u8FD9\u91CC\u6211\u4EEC\u8981\u5BF9\u5B83\u8FDB\u4E00\u6B65\u5224\u65AD\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_2-\u4E0A\u9762\u7684\u4EE3\u7801\u4E2Dxxx\u8FD9\u4E2A\u53D8\u91CF\u4EE3\u8868\u7684\u5C31\u662Fthen-\u56DE\u8C03\u51FD\u6570\u6240\u8FD4\u56DE\u7684\u503C-\u6240\u4EE5\u8FD9\u91CC\u6211\u4EEC\u8981\u5BF9\u5B83\u8FDB\u4E00\u6B65\u5224\u65AD\u5904\u7406" aria-hidden="true">#</a> 2. \u4E0A\u9762\u7684\u4EE3\u7801\u4E2D<code>xxx</code>\u8FD9\u4E2A\u53D8\u91CF\u4EE3\u8868\u7684\u5C31\u662F<code>then()</code>\u56DE\u8C03\u51FD\u6570\u6240\u8FD4\u56DE\u7684\u503C,\u6240\u4EE5\u8FD9\u91CC\u6211\u4EEC\u8981\u5BF9\u5B83\u8FDB\u4E00\u6B65\u5224\u65AD\u5904\u7406</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> xxx <span class="token operator">=</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>xxx<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> xxx <span class="token operator">=</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>xxx<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">resolvePromise</span> <span class="token punctuation">(</span><span class="token parameter">xxx<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>xxx <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5982\u679C\u8FD4\u56DE\u7684\u662Fpromise,\u5C06\u6210\u529F/\u5931\u8D25\u7EE7\u7EED\u5F80\u4E0B\u4F20\u9012</span>
    <span class="token comment">// xxx.then(value =&gt; resolve(value),reason =&gt; reject(reason))</span>
    <span class="token comment">//\u7B80\u5199\u2193</span>
    xxx<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>xxx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E2E\u52A9\u51FD\u6570<code>resolvePromise</code>\u7684\u903B\u8F91\u5F88\u7B80\u5355:</p><ol><li>\u5224\u65AD<code>xxx</code>\u662F\u666E\u901A\u503C\u8FD8\u662F<code>Promise\u5BF9\u8C61</code></li><li>\u5982\u679C<code>xxx</code>\u662F<code>Promise\u5B9E\u4F8B</code>,\u8C03\u7528<code>xxx.then()</code>,\u8FD4\u56DE\u6210\u529F\u5C31\u8D70<code>resolve</code>,\u53CD\u4E4B\u8D70<code>reject</code></li><li>\u5982\u679C\u4E0D\u662F,\u76F4\u63A5<code>resolve(xxx)</code>,\u5C06<code>xxx</code>\u8FD9\u4E2A\u8FD4\u56DE\u503C\u4F20\u9012\u4E0B\u53BB</li></ol><h4 id="_3-\u5224\u65ADxxx\u662F\u5426\u5FAA\u73AF\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_3-\u5224\u65ADxxx\u662F\u5426\u5FAA\u73AF\u8C03\u7528" aria-hidden="true">#</a> 3. \u5224\u65AD<code>xxx</code>\u662F\u5426\u5FAA\u73AF\u8C03\u7528</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token function">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> xxx <span class="token operator">=</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>xxx<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">resolvePromise</span> <span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> xxx<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">===</span> xxx<span class="token punctuation">)</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0D\u80FD\u8FD4\u56DE\u81EA\u8EAB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C<code>p</code>\u548C<code>xxx</code>\u76F8\u7B49,\u76F4\u63A5<code>reject</code>\u8FD4\u56DE\u4E00\u4E2A<code>TypeError</code></p><h4 id="_4-p\u7684\u83B7\u53D6\u65F6\u673A" tabindex="-1"><a class="header-anchor" href="#_4-p\u7684\u83B7\u53D6\u65F6\u673A" aria-hidden="true">#</a> 4. p\u7684\u83B7\u53D6\u65F6\u673A</h4><p>\u6309\u7167\u4E4B\u524D\u6211\u4EEC\u7684\u5206\u6790,\u5199\u5230\u8FD9\u91CC\u5E94\u8BE5\u5C31\u5B9E\u73B0\u529F\u80FD\u4E86\u3002<br> \u4F46\u4E0A\u9762\u7684\u4EE3\u7801\u9690\u85CF\u4E86\u4E00\u4E2Abug: \u6211\u4EEC\u5728\u5411<code>resolvePromise()</code>\u4F20\u9012<code>p</code>\u65F6,\u4ED4\u7EC6\u60F3\u4E00\u60F3,\u8FD9\u65F6\u7684<code>p</code>\u521B\u5EFA\u4E86\u5417?<br> \u719F\u6089Js\u5F02\u6B65\u673A\u5236\u7684\u5C0F\u4F19\u4F34\u5E94\u8BE5\u53CD\u5E94\u8FC7\u6765\u4E86,\u8FD9\u65F6\u5019<code>p</code>\u6839\u672C\u5C31\u6CA1\u521B\u5EFA\u561B\u3002 \u6211\u4EEC\u5BF9\u4EE3\u7801\u505A\u51FA\u5982\u4E0B\u6539\u52A8\u5C31\u80FD\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token comment">//myPromise.js</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token function">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> xxx <span class="token operator">=</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
          <span class="token function">resolvePromise</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>xxx<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* ---\u7701\u7565--- */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>setTimeout</code>\u8BA9\u4EE3\u7801\u53D8\u6210\u5F02\u6B65\u903B\u8F91,\u7B49<code>p</code>\u521B\u5EFA\u597D\u4E4B\u540E,\u5728\u6267\u884C<code>setTimeout</code>\u56DE\u8C03\u51FD\u6570\u91CC\u9762\u7684\u4EE3\u7801</p>`,52),f={class:"custom-container tip"},g={viewBox:"0 0 25 25",xmlns:"http://www.w3.org/2000/svg","xml:space":"preserve",style:{"fill-rule":"evenodd","clip-rule":"evenodd","stroke-linejoin":"round","stroke-miterlimit":"2"}},w=n("path",{d:"M297.6 258.73H296c-59.47.87-110.69 51.45-111.83 110.43-.626 36.485 16.525 71.085 45.94 92.68 17.86 13.18 29.88 33.56 33.77 56.42h67.62c4-22.82 16.13-43.3 34.16-56.74 28.589-21.097 45.496-54.587 45.496-90.118 0-30.03-12.078-58.833-33.496-79.882a113.133 113.133 0 0 0-80.06-32.79ZM265.19 550.7v26.6c0 4.84 1.17 6.43 1.17 6.43l63.72-.59V550.7h-64.89Z",style:{fill:"#48b884","fill-rule":"nonzero"},transform:"matrix(.042 0 0 .042 0 -5.178)"},null,-1),x=n("path",{d:"M297.64 123.3C133.26 123.3 0 256.56 0 420.94s133.26 297.63 297.64 297.63 297.63-133.25 297.63-297.63S462 123.3 297.64 123.3ZM385 487.57c-14.11 10.48-22.51 28.09-22.51 47.14v48.43c-.016 17.792-14.648 32.428-32.44 32.45h-64.86c-15.6 0-32.44-12-32.44-38.29v-42.82c0-19-8.21-36.4-21.93-46.52-37.882-27.85-59.959-72.44-59.14-119.45 1.46-77.24 66-141.09 143.81-142.22 38.87.19 76.89 14.37 105 42.11a143.764 143.764 0 0 1 43.14 103c-.159 45.761-21.911 88.86-58.63 116.17Z",style:{fill:"#48b884","fill-rule":"nonzero"},transform:"matrix(.042 0 0 .042 0 -5.178)"},null,-1),j=[w,x],P=n("p",{class:"custom-container-title"},"TIP",-1),_=n("p",null,[s("\u8BB0\u5F97\u628AFULFILLED,REJECTED,PENDING\u90FD\u52A0\u4E0A"),n("code",null,"setTimeout()"),s("\u54E6")],-1),E=p(`<h2 id="\u6355\u83B7\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u6355\u83B7\u9519\u8BEF" aria-hidden="true">#</a> \u6355\u83B7\u9519\u8BEF</h2><h4 id="\u6267\u884C\u5668\u9519\u8BEF\u6355\u83B7" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u5668\u9519\u8BEF\u6355\u83B7" aria-hidden="true">#</a> \u6267\u884C\u5668\u9519\u8BEF\u6355\u83B7</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;executor error&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="then-\u4E2D\u7684\u9519\u8BEF\u6355\u83B7" tabindex="-1"><a class="header-anchor" href="#then-\u4E2D\u7684\u9519\u8BEF\u6355\u83B7" aria-hidden="true">#</a> <code>then()</code>\u4E2D\u7684\u9519\u8BEF\u6355\u83B7</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> xxx <span class="token operator">=</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>xxx<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> p
  <span class="token punctuation">}</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>FULFILLED</code>\u72B6\u6001\u548C<code>REJECTED</code>\u72B6\u6001\u7684\u5904\u7406\u65B9\u5F0F\u662F\u4E00\u6837\u7684,\u8FD9\u91CC\u5C31\u7701\u7565\u4E86<br><code>PENDING</code>\u72B6\u6001\u7684\u5904\u7406\u7A0D\u5FAE\u6709\u4E9B\u4E0D\u540C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>successCB<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successCB<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/* ---\u7701\u7565--- */</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>failCB<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>failCB<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">/* ---\u7701\u7565--- */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8FD9\u91CCpush\u4E00\u4E2A\u7BAD\u5934\u51FD\u6570\u662F\u4E3A\u4E86\u65B9\u4FBF\u5199try,catch</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>successCB<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> xxx <span class="token operator">=</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>xxx<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>failCB<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> xxx <span class="token operator">=</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>xxx<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> p
  <span class="token punctuation">}</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="then-\u53C2\u6570\u66F4\u6539\u4E3A\u53EF\u9009\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#then-\u53C2\u6570\u66F4\u6539\u4E3A\u53EF\u9009\u53C2\u6570" aria-hidden="true">#</a> then()\u53C2\u6570\u66F4\u6539\u4E3A\u53EF\u9009\u53C2\u6570</h2><p>\u539F\u751F<code>Promise</code>\u5728\u8C03\u7528<code>then()</code>\u65F6,\u53EF\u4EE5\u9009\u62E9\u4E0D\u4F20\u4EFB\u4F55\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u7B49\u4EF7\u4E8E.then(value =&gt; value)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6838\u5FC3\u539F\u7406,\u5C31\u662F\u5224\u65AD<code>then</code>\u7684\u4E24\u4E2A\u53C2\u6570\u5B58\u5728\u4E0E\u5426</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//myPromise.js</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span>error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    success <span class="token operator">=</span> success <span class="token operator">?</span> <span class="token function-variable function">success</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value
    error <span class="token operator">=</span> error <span class="token operator">?</span> <span class="token function-variable function">error</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value
    <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-all" tabindex="-1"><a class="header-anchor" href="#promise-all" aria-hidden="true">#</a> Promise.all()</h2><h3 id="\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#\u7279\u70B9" aria-hidden="true">#</a> \u7279\u70B9</h3><p>\u8FD8\u662F\u8001\u89C4\u77E9, \u60F3\u641E\u6E05\u695A<code>Promise.all()</code>\u7684\u5B9E\u73B0\u539F\u7406,\u6211\u4EEC\u5148\u6765\u68B3\u7406\u4E00\u4E0B<code>Promise.all()</code>\u672C\u8EAB\u6709\u4EC0\u4E48\u7279\u70B9:</p><ol><li>\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528<code>Promise.all()</code>\u6765\u8C03\u7528,\u6240\u4EE5<code>all()</code>\u662F\u4E00\u4E2A<code>static</code>\u65B9\u6CD5;\u540C\u6837\u8FD4\u56DE\u4E00\u4E2A<code>Promise</code>,\u4E5F\u5C31\u610F\u5473\u7740\u540C\u6837\u53EF\u4EE5\u4F7F\u7528<code>then()</code>\u65B9\u6CD5</li><li><code>Promise.all()</code>\u4F1A\u4FDD\u8BC1\u6267\u884C\u987A\u5E8F\u6309\u7167\u4F20\u9012\u8FDB\u6765\u7684\u6570\u7EC4\u53C2\u6570\u7684\u987A\u5E8F\u6765\u6267\u884C</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u4F2A\u4EE3\u7801</span>
Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//res =&gt; [&#39;a&#39;,p1,p2,&#39;b&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>Promise.all()</code>\u7684\u6570\u7EC4\u53C2\u6570\u4E2D\u7684\u6240\u6709<code>Promise</code>\u8FD4\u56DE\u7ED3\u679C\u4E3A\u6210\u529F\u65F6,<code>Promise.all()</code>\u8FD4\u56DE\u7684\u72B6\u6001\u624D\u662F\u6210\u529F\u7684</li><li>\u6570\u7EC4\u53C2\u6570\u5982\u679C\u4E0D\u662F<code>Promise</code>\u5B9E\u4F8B\u76F4\u63A5<code>resolve()</code></li></ol><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u7279\u60271" tabindex="-1"><a class="header-anchor" href="#\u7279\u60271" aria-hidden="true">#</a> \u7279\u60271</h4><p><code>Promise.all()</code>\u63A5\u6536\u4E00\u4E2A\u6570\u7EC4,\u8FD4\u56DE\u4E00\u4E2A<code>Promise</code>,\u5E76\u4F1A\u5BF9\u8FD9\u4E2A\u6570\u7EC4\u8FDB\u884C\u5904\u7406\u4E4B\u540E,\u5C06\u5176\u4F20\u9012\u7ED9<code>then()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">//TodoSomething</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u7279\u60272-3-4" tabindex="-1"><a class="header-anchor" href="#\u7279\u60272-3-4" aria-hidden="true">#</a> \u7279\u60272,3,4</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//\u7528\u6765\u63A5\u6536array\u5904\u7406\u540E\u7684\u7ED3\u679C</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5E2E\u52A9\u51FD\u6570</span>
      <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
      <span class="token punctuation">}</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u8FD9\u91CC\u6709\u4E2A\u7EC6\u8282,\u5F53for\u904D\u5386\u5230\u8FD9\u91CC\u65F6,\u5982\u679C\u7B2Ci\u9879\u662FPromise\u7684\u8BDD,\u7B2Ci\u4E2APromise\u4E2D\u7684\u6267\u884C\u5668\u5DF2\u7ECF\u88AB\u6267\u884C\u4E86</span>
        <span class="token comment">//\u7C7B\u4F3C\u4E8E let p = new Promise(resolve =&gt; resolve(&#39;123&#39;))</span>
        <span class="token comment">//item \u5C31\u662Fp, array[i]\u5C31\u662F\u7B49\u53F7\u53F3\u8FB9,\u6211\u4EEC\u77E5\u9053,\u53EA\u8981\u4E00new\u51FA\u6765,\u53F3\u8FB9\u4F20\u8FDB\u53BB\u7684\u6267\u884C\u5668\u5C31\u4F1A\u6267\u884C\u4E86</span>
        <span class="token comment">//\u6240\u4EE5\u4E0B\u9762\u624D\u53EF\u4EE5\u4F7F\u7528item.then()</span>
        <span class="token keyword">let</span> item <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          item<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>item<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5199\u5230\u8FD9\u91CC,\u5927\u81F4\u7684\u529F\u80FD\u5DF2\u7ECF\u5B9E\u73B0\u4E86,\u4F46\u8FD8\u6709\u4E2A\u95EE\u9898\u6CA1\u6709\u5904\u7406\u3002<br> \u5982\u679Carray\u6570\u7EC4\u4E2D\u6709\u5F02\u6B65\u903B\u8F91\u7684Promise,\u4EE3\u7801\u8FD0\u884C\u7ED3\u679C\u5C31\u4E0D\u5BF9\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">myPromise</span><span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
        <span class="token comment">//\u5F15\u5165index,\u89E3\u51B3\u5F02\u6B65\u903B\u8F91</span>
        index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">===</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> item <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          item<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>item<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// resolve(result)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2Dindex\u7684\u5F15\u5165,\u975E\u5E38\u5DE7\u5999\u3002<br><code>add()</code>\u5E2E\u52A9\u51FD\u6570\u5B9E\u5728\u904D\u5386array\u65F6\u8C03\u7528\u7684,\u5F53item\u975EPromise\u5B9E\u4F8B,\u6CA1\u4EC0\u4E48\u597D\u8BF4\u7684,\u5F80result\u91CC\u653E\u5C31\u884C<br> \u90A3\u5728item\u662F<code>Promise</code>\u5B9E\u4F8B\u4E14\u4E3A\u5F02\u6B65\u903B\u8F91\u65F6:</p><ol><li><code>let item = array[i]</code>\u6267\u884CPromise\u7684\u6267\u884C\u51FD\u6570,\u5C06\u5F02\u6B65\u903B\u8F91\u653E\u5165\u5FAE\u4EFB\u52A1\u4E2D</li><li><code>item.then()</code>\u56E0\u4E3A\u6709\u5F02\u6B65\u903B\u8F91,\u6240\u4EE5then\u5185\u90E8\u4F1A\u56E0\u4E3APromise\u7684\u72B6\u6001\u662Fpending,\u5C06\u5F02\u6B65\u903B\u8F91push\u8FDBsuccessCb(\u53C2\u8003then\u90E8\u5206\u7684\u903B\u8F91)</li><li>\u8FD9\u4E00\u8F6Efor\u5FAA\u73AF\u7ED3\u675F,\u7EE7\u7EED\u904D\u5386,\u91CD\u590D\u4E0A\u9762\u7684\u6B65\u9AA4</li><li>for\u5FAA\u73AF\u7ED3\u675F,\u5FAE\u4EFB\u52A1\u6267\u884C\u961F\u5217\u4E2D\u7684Promise\u6267\u884C\u51FD\u6570\u5F00\u59CB\u4F9D\u6B21\u6267\u884C,\u8FD9\u65F6\u5982\u679C\u6267\u884C\u51FD\u6570\u6267\u884C\u4E86<code>resolve()</code>,\u8BE5Promise\u72B6\u6001\u66F4\u6539\u4E3A<code>fulfilled</code>\u3002<code>item.then()</code>\u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u5F00\u59CB\u6267\u884C,\u4E5F\u5C31\u662Fadd()\u5E2E\u52A9\u51FD\u6570\u5F00\u59CB\u6267\u884C,index\u4E5F\u88AB\u987A\u5229\u9012\u589E\u3002\u5F53<code>index===array.length</code>\u65F6,Promise.all()<code>\u6267\u884Cresolve(result)</code>,\u4E4B\u540E\u5C31\u53EF\u4EE5\u7EE7\u7EED\u8C03\u7528Promise.all()\u7684then()\u51FD\u6570\u4E86</li></ol><h2 id="promise-resolve" tabindex="-1"><a class="header-anchor" href="#promise-resolve" aria-hidden="true">#</a> Promise.resolve()</h2><h3 id="\u5206\u6790-1" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790-1" aria-hidden="true">#</a> \u5206\u6790</h3><h4 id="_1-\u5224\u65AD\u4F20\u9012\u8FDB\u6765\u7684\u53C2\u6570\u662F\u5426\u4E3Apromise\u5BF9\u8C61-\u662F\u5219\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E2Apromise\u5BF9\u8C61-\u5426\u5219new\u4E00\u4E2Apromise\u5BF9\u8C61-\u5E76\u7528resolve-\u4F20\u9012\u51FA\u53BB\u5373\u53EF" tabindex="-1"><a class="header-anchor" href="#_1-\u5224\u65AD\u4F20\u9012\u8FDB\u6765\u7684\u53C2\u6570\u662F\u5426\u4E3Apromise\u5BF9\u8C61-\u662F\u5219\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E2Apromise\u5BF9\u8C61-\u5426\u5219new\u4E00\u4E2Apromise\u5BF9\u8C61-\u5E76\u7528resolve-\u4F20\u9012\u51FA\u53BB\u5373\u53EF" aria-hidden="true">#</a> 1. \u5224\u65AD\u4F20\u9012\u8FDB\u6765\u7684\u53C2\u6570\u662F\u5426\u4E3A<code>Promise</code>\u5BF9\u8C61,\u662F\u5219\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E2A<code>Promise</code>\u5BF9\u8C61,\u5426\u5219<code>new</code>\u4E00\u4E2A<code>Promise</code>\u5BF9\u8C61,\u5E76\u7528<code>resolve()</code>\u4F20\u9012\u51FA\u53BB\u5373\u53EF</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u4F2A\u4EE3\u7801</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//10</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//&#39;aaa&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u73B0-1" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-1" aria-hidden="true">#</a> \u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">myPromise</span><span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-finally" tabindex="-1"><a class="header-anchor" href="#promise-finally" aria-hidden="true">#</a> Promise.finally()</h2><h3 id="\u5206\u6790-2" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790-2" aria-hidden="true">#</a> \u5206\u6790</h3><h4 id="\u65E0\u8BBApromise\u6210\u529F\u8FD8\u662F\u5931\u8D25-\u90FD\u4F1A\u6267\u884Cfinally-\u7684\u56DE\u8C03\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u65E0\u8BBApromise\u6210\u529F\u8FD8\u662F\u5931\u8D25-\u90FD\u4F1A\u6267\u884Cfinally-\u7684\u56DE\u8C03\u51FD\u6570" aria-hidden="true">#</a> \u65E0\u8BBA<code>Promise</code>\u6210\u529F\u8FD8\u662F\u5931\u8D25,\u90FD\u4F1A\u6267\u884C<code>finally()</code>\u7684\u56DE\u8C03\u51FD\u6570</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// reject(&#39;p1 error&#39;)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="finally-\u7684\u56DE\u8C03\u51FD\u6570\u6CA1\u6709\u4EFB\u4F55\u53C2\u6570-\u540C\u65F6\u4E5F\u8FD4\u56DE\u4E00\u4E2Apromise\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#finally-\u7684\u56DE\u8C03\u51FD\u6570\u6CA1\u6709\u4EFB\u4F55\u53C2\u6570-\u540C\u65F6\u4E5F\u8FD4\u56DE\u4E00\u4E2Apromise\u5BF9\u8C61" aria-hidden="true">#</a> <code>finally()</code>\u7684\u56DE\u8C03\u51FD\u6570\u6CA1\u6709\u4EFB\u4F55\u53C2\u6570,\u540C\u65F6\u4E5F\u8FD4\u56DE\u4E00\u4E2A<code>Promise</code>\u5BF9\u8C61</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// reject(&#39;p1 error&#39;)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token string">&#39;finally&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value2</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// p1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6709\u4E2A\u5C0F\u7EC6\u8282,<code>finally()</code>\u867D\u7136\u8FD4\u56DE\u4E86&quot;finally&quot;\u5B57\u7B26\u4E32,\u4F46\u540E\u9762\u7684<code>then()</code>\u63A5\u6536\u7684\u8FD8\u662F<code>resolve(&#39;p1&#39;)</code><br> \u5982\u56FE:<br><img src="`+t+`" alt="1"></p><h3 id="\u5B9E\u73B0-2" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-2" aria-hidden="true">#</a> \u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span><span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">finally</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
      <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> value
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> reason
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684<code>this.then()</code>\u76F8\u5F53\u4E8E\u518D\u6B21\u6267\u884C\u4E86\u4E00\u6B21<code>this</code>\u8FD9\u4E2A<code>Promise</code>\u5B9E\u4F8B\u7684then\u65B9\u6CD5,\u6267\u884C<code>finally()</code>\u7684\u56DE\u8C03\u51FD\u6570\u5E76\u4E14\u8FD4\u56DE<code>this.then()</code>\u6210\u529F/\u5931\u8D25\u7684\u56DE\u8C03\u51FD\u6570\u7684\u503C \u4F46\u8FD9\u91CC\u6709\u4E2A\u95EE\u9898,\u8BD5\u60F3\u4E00\u4E0B\u4E0B\u9762\u7684\u4EE3\u7801:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">p1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
p2<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">p1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>finally()</code>\u4E0D\u4F1A\u7B49<code>p1()</code>\u4E2D\u7684\u5F02\u6B65\u903B\u8F91\u6267\u884C\u5B8C\u6210\u518D\u6267\u884C,\u76F4\u63A5\u8F93\u51FA&quot;finally&quot;,&quot;p2&quot;<br> \u6539\u9020\u4E0B\u4EE3\u7801:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span><span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token function">finally</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
      <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> myPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">)</span><span class="token comment">//\u2460</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> myPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> reason<span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5229\u7528<code>myPromise.resolve()</code>\u4F1A\u5C06\u4EFB\u4F55\u503C\u8F6C\u6362\u4E3A<code>Promise</code>\u5BF9\u8C61\u7684\u7279\u70B9,\u901A\u8FC7<code>then()</code>\u5904\u7406\u5F02\u6B65\u903B\u8F91<br> \u540C\u65F6\u7ED3\u5408\u4E4B\u524D\u7684\u8FD9\u5F20\u56FE\u6765\u7406\u89E3\u4E3A\u4EC0\u4E48\u2460\u8FD4\u56DE\u7684\u662F<code>this.then()</code>\u6210\u529F\u56DE\u8C03\u51FD\u6570\u7684<code>value</code>:<br><img src="`+t+`" alt="1"></p><h2 id="promise-catch" tabindex="-1"><a class="header-anchor" href="#promise-catch" aria-hidden="true">#</a> Promise.catch()</h2><h3 id="\u5206\u6790-3" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790-3" aria-hidden="true">#</a> \u5206\u6790</h3><p>\u8FD4\u56DE\u4E00\u4E2A<code>Promise</code>\u5BF9\u8C61,\u6355\u83B7<code>rejected</code>\u72B6\u6001</p><h3 id="\u5B9E\u73B0-3" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-3" aria-hidden="true">#</a> \u5B9E\u73B0</h3><p><code>this.then()</code>\u7684\u6210\u529F\u56DE\u8C03\u51FD\u6570\u4F20\u5165<code>undefined</code>\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span><span class="token punctuation">{</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
  <span class="token keyword">catch</span><span class="token punctuation">(</span>failCB<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span>failCB<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* ---\u7701\u7565--- */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,54);function C(B,L){return a(),e("div",null,[u,n("div",r,[(a(),e("svg",k,m)),b,h]),y,n("div",f,[(a(),e("svg",g,j)),P,_]),E])}var T=o(i,[["render",C],["__file","2022-05-14-myPromise.html.vue"]]);export{T as default};
